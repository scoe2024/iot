library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity ALU is
    Port (
    A, B     : in  STD_LOGIC_VECTOR( 3 downto 0);  -- 2 inputs 8-bit
    ALU_Sel  : in  STD_LOGIC_VECTOR(3 downto 0);  -- 1 input 4-bit for selecting function
    ALU_Result   : out  STD_LOGIC_VECTOR(4 downto 0); -- 1 output 8-bit 

    );
end ALU; 
architecture Behavioral of ALU is


begin
   process(A,B,ALU_Sel)
 begin
  case(ALU_Sel) is
  when "000" => 
   ALU_Result <= A + B ; 
  when "001" => 
   ALU_Result <= A - B ;
 when "010" => 
   ALU_Result <= A and B;
  when "011" => 
   ALU_Result <= A or B;
  when "100" => 
   ALU_Result <= A xor B;
  when "101" => 
   ALU_Result <= A nor B;
  when "110" => 
   ALU_Result <= A nand B;
  when "111" => 
   ALU_Result <= A xnor B;
  when others => ALU_Result <= A + B ; 
  end case;
 end process;
end Behavioral;